package com.example.demo.controller;

import static org.mockito.Mockito.*;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;

import com.example.demo.form.ItemForm;
import com.example.demo.repository.DeletioinRepository;

@SpringBootTest
class ModControllerTest {

	@MockBean
	DeletioinRepository service;

	@Autowired
	ModController controller;

	MockMvc mock;
	ItemForm form = new ItemForm();

	@BeforeEach
	void setup() {
		mock = MockMvcBuilders.standaloneSetup(controller).build();
	}

	@Test
	void testmod1_1() throws Exception {
		String id = "1";
		form.setMaterial_name("Dくん");

		mock.perform(get("/item_mod/{id}", id).param("material_name", "Dくん"))
				.andExpect(model().attribute("form", form))
				.andExpect(status().isOk())
				.andExpect(view().name("mod"));
	}

	@Test
	void testMod1_2() throws Exception {
		Integer id = 1;
		form.setMaterial_name("Dくん");
		form.setRegular_price("500");

		mock.perform(get("/item_mod/mod_item/{id}", id)
				.param("material_name", "Dくん")
				.param("regular_price", "500"))
				.andExpect(status().isOk())
				.andExpect(view().name("message"));

		verify(service, times(1)).item_update(id, form);
		verify(service, times(1)).item_update_stock(id, form);
	}

}
