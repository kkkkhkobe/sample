package com.example.demo.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.ObjectError;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;

import com.example.demo.entity.ItemEntity;
import com.example.demo.entity.StockEntity;
import com.example.demo.form.ItemForm;
import com.example.demo.form.ItemRegisterForm;
import com.example.demo.repository.ItemRepository;
import com.example.demo.repository.StockRepository;

/**
 * クラス名 :ItemRegisterController
 * 
 * 作成日　:2024/02/27
 * 作成者　:塚田晃介
 * 最終更新日　:2024/02/27
 * 最終更新日　:塚田晃介
 * 
 * Copyright(C) AIOSL Technology All Rights Reserved.
 */

@Controller
public class ItemRegisterController {

	@Autowired
	StockRepository repository;
	@Autowired
	ItemRepository repo;

	/**
	 * @param model Modelのインスタンス
	 * @param form ItemFormのインスタンス
	 * @return 商品登録画面へ遷移
	 */
	@GetMapping("/item_regi")
	public String regi(Model model, ItemForm form) {
		model.addAttribute("form", form);
		return "register";
	}

	/**
	 * @param model Modelのインスタンス
	 * @param form ItemRegisterFormのフォーム
	 * @param result BindingResultのインスタンス
	 * @return 入力値がエラーの場合、登録画面へエラーメッセージを表示
	 * @return 入力値が正常の場合、完了画面へ遷移
	 */
	@GetMapping("/register")
	public String register(Model model, @Validated @ModelAttribute ItemRegisterForm form, 
			BindingResult result) {
		if (result.hasErrors()) {
			List<String> errorList = new ArrayList<String>();
			for (ObjectError error : result.getAllErrors()) {
				errorList.add(error.getDefaultMessage());
			}
			model.addAttribute("error", errorList);
			model.addAttribute("form", form);
			return "register";
		}
		ItemEntity entity = repo.insert(form);
		StockEntity entity1 = repository.insert(form);

		model.addAttribute("form", entity);
		model.addAttribute("form", entity1);

		return "message";
	}

}
